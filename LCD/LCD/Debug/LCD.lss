
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000072c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ff0  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070a  00000000  00000000  000017f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000606  00000000  00000000  00001efa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f4  00000000  00000000  00002500  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000405  00000000  00000000  000026f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000bec  00000000  00000000  00002af9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  000036e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 fe 00 	call	0x1fc	; 0x1fc <main>
  64:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <enbFlash>:
{
	char str[15];
	itoa(num, str, 10);
	sendStr(str);
	
}
  6c:	95 9a       	sbi	0x12, 5	; 18
  6e:	8f e9       	ldi	r24, 0x9F	; 159
  70:	99 e1       	ldi	r25, 0x19	; 25
  72:	01 97       	sbiw	r24, 0x01	; 1
  74:	f1 f7       	brne	.-4      	; 0x72 <enbFlash+0x6>
  76:	00 c0       	rjmp	.+0      	; 0x78 <enbFlash+0xc>
  78:	00 00       	nop
  7a:	00 00       	nop
  7c:	00 00       	nop
  7e:	95 98       	cbi	0x12, 5	; 18
  80:	08 95       	ret

00000082 <checkBusy>:
  82:	17 ba       	out	0x17, r1	; 23
  84:	97 9a       	sbi	0x12, 7	; 18
  86:	92 98       	cbi	0x12, 2	; 18
  88:	c7 9b       	sbis	0x18, 7	; 24
  8a:	04 c0       	rjmp	.+8      	; 0x94 <checkBusy+0x12>
  8c:	0e 94 36 00 	call	0x6c	; 0x6c <enbFlash>
  90:	c7 99       	sbic	0x18, 7	; 24
  92:	fc cf       	rjmp	.-8      	; 0x8c <checkBusy+0xa>
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	87 bb       	out	0x17, r24	; 23
  98:	08 95       	ret

0000009a <sendChar>:
  9a:	cf 93       	push	r28
  9c:	c8 2f       	mov	r28, r24
  9e:	0e 94 41 00 	call	0x82	; 0x82 <checkBusy>
  a2:	c8 bb       	out	0x18, r28	; 24
  a4:	97 98       	cbi	0x12, 7	; 18
  a6:	92 9a       	sbi	0x12, 2	; 18
  a8:	0e 94 36 00 	call	0x6c	; 0x6c <enbFlash>
  ac:	18 ba       	out	0x18, r1	; 24
  ae:	cf 91       	pop	r28
  b0:	08 95       	ret

000000b2 <sendCom>:
  b2:	cf 93       	push	r28
  b4:	c8 2f       	mov	r28, r24
  b6:	0e 94 41 00 	call	0x82	; 0x82 <checkBusy>
  ba:	c8 bb       	out	0x18, r28	; 24
  bc:	82 b3       	in	r24, 0x12	; 18
  be:	8b 77       	andi	r24, 0x7B	; 123
  c0:	82 bb       	out	0x12, r24	; 18
  c2:	0e 94 36 00 	call	0x6c	; 0x6c <enbFlash>
  c6:	18 ba       	out	0x18, r1	; 24
  c8:	cf 91       	pop	r28
  ca:	08 95       	ret

000000cc <initLCD>:
  cc:	8c e3       	ldi	r24, 0x3C	; 60
  ce:	0e 94 59 00 	call	0xb2	; 0xb2 <sendCom>
  d2:	87 ec       	ldi	r24, 0xC7	; 199
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <initLCD+0xa>
  da:	00 c0       	rjmp	.+0      	; 0xdc <initLCD+0x10>
  dc:	00 00       	nop
  de:	8e e0       	ldi	r24, 0x0E	; 14
  e0:	0e 94 59 00 	call	0xb2	; 0xb2 <sendCom>
  e4:	87 ec       	ldi	r24, 0xC7	; 199
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <initLCD+0x1c>
  ec:	00 c0       	rjmp	.+0      	; 0xee <initLCD+0x22>
  ee:	00 00       	nop
  f0:	08 95       	ret

000000f2 <sendStr>:
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	ec 01       	movw	r28, r24
  f8:	88 81       	ld	r24, Y
  fa:	88 23       	and	r24, r24
  fc:	31 f0       	breq	.+12     	; 0x10a <sendStr+0x18>
  fe:	21 96       	adiw	r28, 0x01	; 1
 100:	0e 94 4d 00 	call	0x9a	; 0x9a <sendChar>
 104:	89 91       	ld	r24, Y+
 106:	81 11       	cpse	r24, r1
 108:	fb cf       	rjmp	.-10     	; 0x100 <sendStr+0xe>
 10a:	df 91       	pop	r29
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <sendFloat>:

void sendFloat(float num, int approx)
{
 110:	4f 92       	push	r4
 112:	5f 92       	push	r5
 114:	6f 92       	push	r6
 116:	7f 92       	push	r7
 118:	8f 92       	push	r8
 11a:	9f 92       	push	r9
 11c:	af 92       	push	r10
 11e:	bf 92       	push	r11
 120:	ef 92       	push	r14
 122:	ff 92       	push	r15
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	cd b7       	in	r28, 0x3d	; 61
 12e:	de b7       	in	r29, 0x3e	; 62
 130:	6e 97       	sbiw	r28, 0x1e	; 30
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	f8 94       	cli
 136:	de bf       	out	0x3e, r29	; 62
 138:	0f be       	out	0x3f, r0	; 63
 13a:	cd bf       	out	0x3d, r28	; 61
 13c:	2b 01       	movw	r4, r22
 13e:	3c 01       	movw	r6, r24
 140:	7a 01       	movw	r14, r20
	char str[15];
	char str2[15];
	int x = (int)num;
 142:	0e 94 9f 01 	call	0x33e	; 0x33e <__fixsfsi>
 146:	4b 01       	movw	r8, r22
 148:	5c 01       	movw	r10, r24
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 14a:	4a e0       	ldi	r20, 0x0A	; 10
 14c:	8e 01       	movw	r16, r28
 14e:	0f 5f       	subi	r16, 0xFF	; 255
 150:	1f 4f       	sbci	r17, 0xFF	; 255
 152:	b8 01       	movw	r22, r16
 154:	c4 01       	movw	r24, r8
 156:	0e 94 1c 03 	call	0x638	; 0x638 <__itoa_ncheck>
	itoa(x, str, 10);
	
	
	num -= x;
 15a:	b4 01       	movw	r22, r8
 15c:	99 0c       	add	r9, r9
 15e:	88 0b       	sbc	r24, r24
 160:	99 0b       	sbc	r25, r25
 162:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__floatsisf>
 166:	9b 01       	movw	r18, r22
 168:	ac 01       	movw	r20, r24
 16a:	c3 01       	movw	r24, r6
 16c:	b2 01       	movw	r22, r4
 16e:	0e 94 1b 01 	call	0x236	; 0x236 <__subsf3>
	strcat(str, ".");
 172:	f8 01       	movw	r30, r16
 174:	01 90       	ld	r0, Z+
 176:	00 20       	and	r0, r0
 178:	e9 f7       	brne	.-6      	; 0x174 <sendFloat+0x64>
 17a:	31 97       	sbiw	r30, 0x01	; 1
 17c:	2e e2       	ldi	r18, 0x2E	; 46
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	31 83       	std	Z+1, r19	; 0x01
 182:	20 83       	st	Z, r18
	
	for(int i = 0; i < approx; i++)
 184:	1e 14       	cp	r1, r14
 186:	1f 04       	cpc	r1, r15
 188:	6c f4       	brge	.+26     	; 0x1a4 <sendFloat+0x94>
 18a:	00 e0       	ldi	r16, 0x00	; 0
 18c:	10 e0       	ldi	r17, 0x00	; 0
	{
		num *= 10;
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	40 e2       	ldi	r20, 0x20	; 32
 194:	51 e4       	ldi	r21, 0x41	; 65
 196:	0e 94 a4 02 	call	0x548	; 0x548 <__mulsf3>
	
	
	num -= x;
	strcat(str, ".");
	
	for(int i = 0; i < approx; i++)
 19a:	0f 5f       	subi	r16, 0xFF	; 255
 19c:	1f 4f       	sbci	r17, 0xFF	; 255
 19e:	e0 16       	cp	r14, r16
 1a0:	f1 06       	cpc	r15, r17
 1a2:	a9 f7       	brne	.-22     	; 0x18e <sendFloat+0x7e>
	{
		num *= 10;
	}
	
	num = ceil(num);
 1a4:	0e 94 88 01 	call	0x310	; 0x310 <ceil>
 1a8:	0e 94 9f 01 	call	0x33e	; 0x33e <__fixsfsi>
 1ac:	dc 01       	movw	r26, r24
 1ae:	cb 01       	movw	r24, r22
 1b0:	4a e0       	ldi	r20, 0x0A	; 10
 1b2:	be 01       	movw	r22, r28
 1b4:	60 5f       	subi	r22, 0xF0	; 240
 1b6:	7f 4f       	sbci	r23, 0xFF	; 255
 1b8:	0e 94 1c 03 	call	0x638	; 0x638 <__itoa_ncheck>
	x = (int)num;
	
	
	
	itoa(x, str2, 10);
	strcat(str, str2);
 1bc:	be 01       	movw	r22, r28
 1be:	60 5f       	subi	r22, 0xF0	; 240
 1c0:	7f 4f       	sbci	r23, 0xFF	; 255
 1c2:	ce 01       	movw	r24, r28
 1c4:	01 96       	adiw	r24, 0x01	; 1
 1c6:	0e 94 11 03 	call	0x622	; 0x622 <strcat>
	
	
	sendStr(str);
 1ca:	ce 01       	movw	r24, r28
 1cc:	01 96       	adiw	r24, 0x01	; 1
 1ce:	0e 94 79 00 	call	0xf2	; 0xf2 <sendStr>
	
	
}
 1d2:	6e 96       	adiw	r28, 0x1e	; 30
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	f8 94       	cli
 1d8:	de bf       	out	0x3e, r29	; 62
 1da:	0f be       	out	0x3f, r0	; 63
 1dc:	cd bf       	out	0x3d, r28	; 61
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	ff 90       	pop	r15
 1e8:	ef 90       	pop	r14
 1ea:	bf 90       	pop	r11
 1ec:	af 90       	pop	r10
 1ee:	9f 90       	pop	r9
 1f0:	8f 90       	pop	r8
 1f2:	7f 90       	pop	r7
 1f4:	6f 90       	pop	r6
 1f6:	5f 90       	pop	r5
 1f8:	4f 90       	pop	r4
 1fa:	08 95       	ret

000001fc <main>:
#include <util/delay.h>
#include "liqDis.h"

int main(void)
{
	DD_LCDControl |= (1 << ENB) | (1 << RW) | (1 << RS);
 1fc:	81 b3       	in	r24, 0x11	; 17
 1fe:	84 6a       	ori	r24, 0xA4	; 164
 200:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 202:	8f e5       	ldi	r24, 0x5F	; 95
 204:	9a ee       	ldi	r25, 0xEA	; 234
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <main+0xa>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x10>
 20c:	00 00       	nop
	_delay_ms(15);
    
	sendCom(0x01); //Clear Screen 0x01 = 00000001
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 59 00 	call	0xb2	; 0xb2 <sendCom>
 214:	8f e3       	ldi	r24, 0x3F	; 63
 216:	9f e1       	ldi	r25, 0x1F	; 31
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <main+0x1c>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <main+0x22>
 21e:	00 00       	nop
	_delay_ms(2);
	
				
	initLCD();
 220:	0e 94 66 00 	call	0xcc	; 0xcc <initLCD>

	
	//sendCom(0);
	
//	sendStr("BitechX");
 	sendFloat(754.23, 2);
 224:	42 e0       	ldi	r20, 0x02	; 2
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	68 eb       	ldi	r22, 0xB8	; 184
 22a:	7e e8       	ldi	r23, 0x8E	; 142
 22c:	8c e3       	ldi	r24, 0x3C	; 60
 22e:	94 e4       	ldi	r25, 0x44	; 68
 230:	0e 94 88 00 	call	0x110	; 0x110 <sendFloat>
 234:	ff cf       	rjmp	.-2      	; 0x234 <main+0x38>

00000236 <__subsf3>:
 236:	50 58       	subi	r21, 0x80	; 128

00000238 <__addsf3>:
 238:	bb 27       	eor	r27, r27
 23a:	aa 27       	eor	r26, r26
 23c:	0e 94 33 01 	call	0x266	; 0x266 <__addsf3x>
 240:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <__fp_round>
 244:	0e 94 44 02 	call	0x488	; 0x488 <__fp_pscA>
 248:	38 f0       	brcs	.+14     	; 0x258 <__addsf3+0x20>
 24a:	0e 94 4b 02 	call	0x496	; 0x496 <__fp_pscB>
 24e:	20 f0       	brcs	.+8      	; 0x258 <__addsf3+0x20>
 250:	39 f4       	brne	.+14     	; 0x260 <__addsf3+0x28>
 252:	9f 3f       	cpi	r25, 0xFF	; 255
 254:	19 f4       	brne	.+6      	; 0x25c <__addsf3+0x24>
 256:	26 f4       	brtc	.+8      	; 0x260 <__addsf3+0x28>
 258:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_nan>
 25c:	0e f4       	brtc	.+2      	; 0x260 <__addsf3+0x28>
 25e:	e0 95       	com	r30
 260:	e7 fb       	bst	r30, 7
 262:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_inf>

00000266 <__addsf3x>:
 266:	e9 2f       	mov	r30, r25
 268:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fp_split3>
 26c:	58 f3       	brcs	.-42     	; 0x244 <__addsf3+0xc>
 26e:	ba 17       	cp	r27, r26
 270:	62 07       	cpc	r22, r18
 272:	73 07       	cpc	r23, r19
 274:	84 07       	cpc	r24, r20
 276:	95 07       	cpc	r25, r21
 278:	20 f0       	brcs	.+8      	; 0x282 <__addsf3x+0x1c>
 27a:	79 f4       	brne	.+30     	; 0x29a <__addsf3x+0x34>
 27c:	a6 f5       	brtc	.+104    	; 0x2e6 <__addsf3x+0x80>
 27e:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__fp_zero>
 282:	0e f4       	brtc	.+2      	; 0x286 <__addsf3x+0x20>
 284:	e0 95       	com	r30
 286:	0b 2e       	mov	r0, r27
 288:	ba 2f       	mov	r27, r26
 28a:	a0 2d       	mov	r26, r0
 28c:	0b 01       	movw	r0, r22
 28e:	b9 01       	movw	r22, r18
 290:	90 01       	movw	r18, r0
 292:	0c 01       	movw	r0, r24
 294:	ca 01       	movw	r24, r20
 296:	a0 01       	movw	r20, r0
 298:	11 24       	eor	r1, r1
 29a:	ff 27       	eor	r31, r31
 29c:	59 1b       	sub	r21, r25
 29e:	99 f0       	breq	.+38     	; 0x2c6 <__addsf3x+0x60>
 2a0:	59 3f       	cpi	r21, 0xF9	; 249
 2a2:	50 f4       	brcc	.+20     	; 0x2b8 <__addsf3x+0x52>
 2a4:	50 3e       	cpi	r21, 0xE0	; 224
 2a6:	68 f1       	brcs	.+90     	; 0x302 <__addsf3x+0x9c>
 2a8:	1a 16       	cp	r1, r26
 2aa:	f0 40       	sbci	r31, 0x00	; 0
 2ac:	a2 2f       	mov	r26, r18
 2ae:	23 2f       	mov	r18, r19
 2b0:	34 2f       	mov	r19, r20
 2b2:	44 27       	eor	r20, r20
 2b4:	58 5f       	subi	r21, 0xF8	; 248
 2b6:	f3 cf       	rjmp	.-26     	; 0x29e <__addsf3x+0x38>
 2b8:	46 95       	lsr	r20
 2ba:	37 95       	ror	r19
 2bc:	27 95       	ror	r18
 2be:	a7 95       	ror	r26
 2c0:	f0 40       	sbci	r31, 0x00	; 0
 2c2:	53 95       	inc	r21
 2c4:	c9 f7       	brne	.-14     	; 0x2b8 <__addsf3x+0x52>
 2c6:	7e f4       	brtc	.+30     	; 0x2e6 <__addsf3x+0x80>
 2c8:	1f 16       	cp	r1, r31
 2ca:	ba 0b       	sbc	r27, r26
 2cc:	62 0b       	sbc	r22, r18
 2ce:	73 0b       	sbc	r23, r19
 2d0:	84 0b       	sbc	r24, r20
 2d2:	ba f0       	brmi	.+46     	; 0x302 <__addsf3x+0x9c>
 2d4:	91 50       	subi	r25, 0x01	; 1
 2d6:	a1 f0       	breq	.+40     	; 0x300 <__addsf3x+0x9a>
 2d8:	ff 0f       	add	r31, r31
 2da:	bb 1f       	adc	r27, r27
 2dc:	66 1f       	adc	r22, r22
 2de:	77 1f       	adc	r23, r23
 2e0:	88 1f       	adc	r24, r24
 2e2:	c2 f7       	brpl	.-16     	; 0x2d4 <__addsf3x+0x6e>
 2e4:	0e c0       	rjmp	.+28     	; 0x302 <__addsf3x+0x9c>
 2e6:	ba 0f       	add	r27, r26
 2e8:	62 1f       	adc	r22, r18
 2ea:	73 1f       	adc	r23, r19
 2ec:	84 1f       	adc	r24, r20
 2ee:	48 f4       	brcc	.+18     	; 0x302 <__addsf3x+0x9c>
 2f0:	87 95       	ror	r24
 2f2:	77 95       	ror	r23
 2f4:	67 95       	ror	r22
 2f6:	b7 95       	ror	r27
 2f8:	f7 95       	ror	r31
 2fa:	9e 3f       	cpi	r25, 0xFE	; 254
 2fc:	08 f0       	brcs	.+2      	; 0x300 <__addsf3x+0x9a>
 2fe:	b0 cf       	rjmp	.-160    	; 0x260 <__addsf3+0x28>
 300:	93 95       	inc	r25
 302:	88 0f       	add	r24, r24
 304:	08 f0       	brcs	.+2      	; 0x308 <__addsf3x+0xa2>
 306:	99 27       	eor	r25, r25
 308:	ee 0f       	add	r30, r30
 30a:	97 95       	ror	r25
 30c:	87 95       	ror	r24
 30e:	08 95       	ret

00000310 <ceil>:
 310:	0e 94 85 02 	call	0x50a	; 0x50a <__fp_trunc>
 314:	90 f0       	brcs	.+36     	; 0x33a <ceil+0x2a>
 316:	9f 37       	cpi	r25, 0x7F	; 127
 318:	48 f4       	brcc	.+18     	; 0x32c <ceil+0x1c>
 31a:	91 11       	cpse	r25, r1
 31c:	16 f4       	brtc	.+4      	; 0x322 <ceil+0x12>
 31e:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_szero>
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	70 e0       	ldi	r23, 0x00	; 0
 326:	80 e8       	ldi	r24, 0x80	; 128
 328:	9f e3       	ldi	r25, 0x3F	; 63
 32a:	08 95       	ret
 32c:	26 f0       	brts	.+8      	; 0x336 <ceil+0x26>
 32e:	1b 16       	cp	r1, r27
 330:	61 1d       	adc	r22, r1
 332:	71 1d       	adc	r23, r1
 334:	81 1d       	adc	r24, r1
 336:	0c 94 18 02 	jmp	0x430	; 0x430 <__fp_mintl>
 33a:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_mpack>

0000033e <__fixsfsi>:
 33e:	0e 94 a6 01 	call	0x34c	; 0x34c <__fixunssfsi>
 342:	68 94       	set
 344:	b1 11       	cpse	r27, r1
 346:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_szero>
 34a:	08 95       	ret

0000034c <__fixunssfsi>:
 34c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__fp_splitA>
 350:	88 f0       	brcs	.+34     	; 0x374 <__fixunssfsi+0x28>
 352:	9f 57       	subi	r25, 0x7F	; 127
 354:	98 f0       	brcs	.+38     	; 0x37c <__fixunssfsi+0x30>
 356:	b9 2f       	mov	r27, r25
 358:	99 27       	eor	r25, r25
 35a:	b7 51       	subi	r27, 0x17	; 23
 35c:	b0 f0       	brcs	.+44     	; 0x38a <__fixunssfsi+0x3e>
 35e:	e1 f0       	breq	.+56     	; 0x398 <__fixunssfsi+0x4c>
 360:	66 0f       	add	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	1a f0       	brmi	.+6      	; 0x370 <__fixunssfsi+0x24>
 36a:	ba 95       	dec	r27
 36c:	c9 f7       	brne	.-14     	; 0x360 <__fixunssfsi+0x14>
 36e:	14 c0       	rjmp	.+40     	; 0x398 <__fixunssfsi+0x4c>
 370:	b1 30       	cpi	r27, 0x01	; 1
 372:	91 f0       	breq	.+36     	; 0x398 <__fixunssfsi+0x4c>
 374:	0e 94 9d 02 	call	0x53a	; 0x53a <__fp_zero>
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	08 95       	ret
 37c:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__fp_zero>
 380:	67 2f       	mov	r22, r23
 382:	78 2f       	mov	r23, r24
 384:	88 27       	eor	r24, r24
 386:	b8 5f       	subi	r27, 0xF8	; 248
 388:	39 f0       	breq	.+14     	; 0x398 <__fixunssfsi+0x4c>
 38a:	b9 3f       	cpi	r27, 0xF9	; 249
 38c:	cc f3       	brlt	.-14     	; 0x380 <__fixunssfsi+0x34>
 38e:	86 95       	lsr	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b3 95       	inc	r27
 396:	d9 f7       	brne	.-10     	; 0x38e <__fixunssfsi+0x42>
 398:	3e f4       	brtc	.+14     	; 0x3a8 <__fixunssfsi+0x5c>
 39a:	90 95       	com	r25
 39c:	80 95       	com	r24
 39e:	70 95       	com	r23
 3a0:	61 95       	neg	r22
 3a2:	7f 4f       	sbci	r23, 0xFF	; 255
 3a4:	8f 4f       	sbci	r24, 0xFF	; 255
 3a6:	9f 4f       	sbci	r25, 0xFF	; 255
 3a8:	08 95       	ret

000003aa <__floatunsisf>:
 3aa:	e8 94       	clt
 3ac:	09 c0       	rjmp	.+18     	; 0x3c0 <__floatsisf+0x12>

000003ae <__floatsisf>:
 3ae:	97 fb       	bst	r25, 7
 3b0:	3e f4       	brtc	.+14     	; 0x3c0 <__floatsisf+0x12>
 3b2:	90 95       	com	r25
 3b4:	80 95       	com	r24
 3b6:	70 95       	com	r23
 3b8:	61 95       	neg	r22
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	8f 4f       	sbci	r24, 0xFF	; 255
 3be:	9f 4f       	sbci	r25, 0xFF	; 255
 3c0:	99 23       	and	r25, r25
 3c2:	a9 f0       	breq	.+42     	; 0x3ee <__floatsisf+0x40>
 3c4:	f9 2f       	mov	r31, r25
 3c6:	96 e9       	ldi	r25, 0x96	; 150
 3c8:	bb 27       	eor	r27, r27
 3ca:	93 95       	inc	r25
 3cc:	f6 95       	lsr	r31
 3ce:	87 95       	ror	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b7 95       	ror	r27
 3d6:	f1 11       	cpse	r31, r1
 3d8:	f8 cf       	rjmp	.-16     	; 0x3ca <__floatsisf+0x1c>
 3da:	fa f4       	brpl	.+62     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3dc:	bb 0f       	add	r27, r27
 3de:	11 f4       	brne	.+4      	; 0x3e4 <__floatsisf+0x36>
 3e0:	60 ff       	sbrs	r22, 0
 3e2:	1b c0       	rjmp	.+54     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3e4:	6f 5f       	subi	r22, 0xFF	; 255
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ea:	9f 4f       	sbci	r25, 0xFF	; 255
 3ec:	16 c0       	rjmp	.+44     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3ee:	88 23       	and	r24, r24
 3f0:	11 f0       	breq	.+4      	; 0x3f6 <__floatsisf+0x48>
 3f2:	96 e9       	ldi	r25, 0x96	; 150
 3f4:	11 c0       	rjmp	.+34     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3f6:	77 23       	and	r23, r23
 3f8:	21 f0       	breq	.+8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fa:	9e e8       	ldi	r25, 0x8E	; 142
 3fc:	87 2f       	mov	r24, r23
 3fe:	76 2f       	mov	r23, r22
 400:	05 c0       	rjmp	.+10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 402:	66 23       	and	r22, r22
 404:	71 f0       	breq	.+28     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 406:	96 e8       	ldi	r25, 0x86	; 134
 408:	86 2f       	mov	r24, r22
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	60 e0       	ldi	r22, 0x00	; 0
 40e:	2a f0       	brmi	.+10     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 410:	9a 95       	dec	r25
 412:	66 0f       	add	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	88 1f       	adc	r24, r24
 418:	da f7       	brpl	.-10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 41a:	88 0f       	add	r24, r24
 41c:	96 95       	lsr	r25
 41e:	87 95       	ror	r24
 420:	97 f9       	bld	r25, 7
 422:	08 95       	ret

00000424 <__fp_inf>:
 424:	97 f9       	bld	r25, 7
 426:	9f 67       	ori	r25, 0x7F	; 127
 428:	80 e8       	ldi	r24, 0x80	; 128
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	60 e0       	ldi	r22, 0x00	; 0
 42e:	08 95       	ret

00000430 <__fp_mintl>:
 430:	88 23       	and	r24, r24
 432:	71 f4       	brne	.+28     	; 0x450 <__fp_mintl+0x20>
 434:	77 23       	and	r23, r23
 436:	21 f0       	breq	.+8      	; 0x440 <__fp_mintl+0x10>
 438:	98 50       	subi	r25, 0x08	; 8
 43a:	87 2b       	or	r24, r23
 43c:	76 2f       	mov	r23, r22
 43e:	07 c0       	rjmp	.+14     	; 0x44e <__fp_mintl+0x1e>
 440:	66 23       	and	r22, r22
 442:	11 f4       	brne	.+4      	; 0x448 <__fp_mintl+0x18>
 444:	99 27       	eor	r25, r25
 446:	0d c0       	rjmp	.+26     	; 0x462 <__fp_mintl+0x32>
 448:	90 51       	subi	r25, 0x10	; 16
 44a:	86 2b       	or	r24, r22
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	2a f0       	brmi	.+10     	; 0x45c <__fp_mintl+0x2c>
 452:	9a 95       	dec	r25
 454:	66 0f       	add	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	da f7       	brpl	.-10     	; 0x452 <__fp_mintl+0x22>
 45c:	88 0f       	add	r24, r24
 45e:	96 95       	lsr	r25
 460:	87 95       	ror	r24
 462:	97 f9       	bld	r25, 7
 464:	08 95       	ret

00000466 <__fp_mpack>:
 466:	9f 3f       	cpi	r25, 0xFF	; 255
 468:	31 f0       	breq	.+12     	; 0x476 <__fp_mpack_finite+0xc>

0000046a <__fp_mpack_finite>:
 46a:	91 50       	subi	r25, 0x01	; 1
 46c:	20 f4       	brcc	.+8      	; 0x476 <__fp_mpack_finite+0xc>
 46e:	87 95       	ror	r24
 470:	77 95       	ror	r23
 472:	67 95       	ror	r22
 474:	b7 95       	ror	r27
 476:	88 0f       	add	r24, r24
 478:	91 1d       	adc	r25, r1
 47a:	96 95       	lsr	r25
 47c:	87 95       	ror	r24
 47e:	97 f9       	bld	r25, 7
 480:	08 95       	ret

00000482 <__fp_nan>:
 482:	9f ef       	ldi	r25, 0xFF	; 255
 484:	80 ec       	ldi	r24, 0xC0	; 192
 486:	08 95       	ret

00000488 <__fp_pscA>:
 488:	00 24       	eor	r0, r0
 48a:	0a 94       	dec	r0
 48c:	16 16       	cp	r1, r22
 48e:	17 06       	cpc	r1, r23
 490:	18 06       	cpc	r1, r24
 492:	09 06       	cpc	r0, r25
 494:	08 95       	ret

00000496 <__fp_pscB>:
 496:	00 24       	eor	r0, r0
 498:	0a 94       	dec	r0
 49a:	12 16       	cp	r1, r18
 49c:	13 06       	cpc	r1, r19
 49e:	14 06       	cpc	r1, r20
 4a0:	05 06       	cpc	r0, r21
 4a2:	08 95       	ret

000004a4 <__fp_round>:
 4a4:	09 2e       	mov	r0, r25
 4a6:	03 94       	inc	r0
 4a8:	00 0c       	add	r0, r0
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <__fp_round+0xc>
 4ac:	88 23       	and	r24, r24
 4ae:	52 f0       	brmi	.+20     	; 0x4c4 <__fp_round+0x20>
 4b0:	bb 0f       	add	r27, r27
 4b2:	40 f4       	brcc	.+16     	; 0x4c4 <__fp_round+0x20>
 4b4:	bf 2b       	or	r27, r31
 4b6:	11 f4       	brne	.+4      	; 0x4bc <__fp_round+0x18>
 4b8:	60 ff       	sbrs	r22, 0
 4ba:	04 c0       	rjmp	.+8      	; 0x4c4 <__fp_round+0x20>
 4bc:	6f 5f       	subi	r22, 0xFF	; 255
 4be:	7f 4f       	sbci	r23, 0xFF	; 255
 4c0:	8f 4f       	sbci	r24, 0xFF	; 255
 4c2:	9f 4f       	sbci	r25, 0xFF	; 255
 4c4:	08 95       	ret

000004c6 <__fp_split3>:
 4c6:	57 fd       	sbrc	r21, 7
 4c8:	90 58       	subi	r25, 0x80	; 128
 4ca:	44 0f       	add	r20, r20
 4cc:	55 1f       	adc	r21, r21
 4ce:	59 f0       	breq	.+22     	; 0x4e6 <__fp_splitA+0x10>
 4d0:	5f 3f       	cpi	r21, 0xFF	; 255
 4d2:	71 f0       	breq	.+28     	; 0x4f0 <__fp_splitA+0x1a>
 4d4:	47 95       	ror	r20

000004d6 <__fp_splitA>:
 4d6:	88 0f       	add	r24, r24
 4d8:	97 fb       	bst	r25, 7
 4da:	99 1f       	adc	r25, r25
 4dc:	61 f0       	breq	.+24     	; 0x4f6 <__fp_splitA+0x20>
 4de:	9f 3f       	cpi	r25, 0xFF	; 255
 4e0:	79 f0       	breq	.+30     	; 0x500 <__fp_splitA+0x2a>
 4e2:	87 95       	ror	r24
 4e4:	08 95       	ret
 4e6:	12 16       	cp	r1, r18
 4e8:	13 06       	cpc	r1, r19
 4ea:	14 06       	cpc	r1, r20
 4ec:	55 1f       	adc	r21, r21
 4ee:	f2 cf       	rjmp	.-28     	; 0x4d4 <__fp_split3+0xe>
 4f0:	46 95       	lsr	r20
 4f2:	f1 df       	rcall	.-30     	; 0x4d6 <__fp_splitA>
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <__fp_splitA+0x30>
 4f6:	16 16       	cp	r1, r22
 4f8:	17 06       	cpc	r1, r23
 4fa:	18 06       	cpc	r1, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	f1 cf       	rjmp	.-30     	; 0x4e2 <__fp_splitA+0xc>
 500:	86 95       	lsr	r24
 502:	71 05       	cpc	r23, r1
 504:	61 05       	cpc	r22, r1
 506:	08 94       	sec
 508:	08 95       	ret

0000050a <__fp_trunc>:
 50a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__fp_splitA>
 50e:	a0 f0       	brcs	.+40     	; 0x538 <__fp_trunc+0x2e>
 510:	be e7       	ldi	r27, 0x7E	; 126
 512:	b9 17       	cp	r27, r25
 514:	88 f4       	brcc	.+34     	; 0x538 <__fp_trunc+0x2e>
 516:	bb 27       	eor	r27, r27
 518:	9f 38       	cpi	r25, 0x8F	; 143
 51a:	60 f4       	brcc	.+24     	; 0x534 <__fp_trunc+0x2a>
 51c:	16 16       	cp	r1, r22
 51e:	b1 1d       	adc	r27, r1
 520:	67 2f       	mov	r22, r23
 522:	78 2f       	mov	r23, r24
 524:	88 27       	eor	r24, r24
 526:	98 5f       	subi	r25, 0xF8	; 248
 528:	f7 cf       	rjmp	.-18     	; 0x518 <__fp_trunc+0xe>
 52a:	86 95       	lsr	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	b1 1d       	adc	r27, r1
 532:	93 95       	inc	r25
 534:	96 39       	cpi	r25, 0x96	; 150
 536:	c8 f3       	brcs	.-14     	; 0x52a <__fp_trunc+0x20>
 538:	08 95       	ret

0000053a <__fp_zero>:
 53a:	e8 94       	clt

0000053c <__fp_szero>:
 53c:	bb 27       	eor	r27, r27
 53e:	66 27       	eor	r22, r22
 540:	77 27       	eor	r23, r23
 542:	cb 01       	movw	r24, r22
 544:	97 f9       	bld	r25, 7
 546:	08 95       	ret

00000548 <__mulsf3>:
 548:	0e 94 b7 02 	call	0x56e	; 0x56e <__mulsf3x>
 54c:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <__fp_round>
 550:	0e 94 44 02 	call	0x488	; 0x488 <__fp_pscA>
 554:	38 f0       	brcs	.+14     	; 0x564 <__mulsf3+0x1c>
 556:	0e 94 4b 02 	call	0x496	; 0x496 <__fp_pscB>
 55a:	20 f0       	brcs	.+8      	; 0x564 <__mulsf3+0x1c>
 55c:	95 23       	and	r25, r21
 55e:	11 f0       	breq	.+4      	; 0x564 <__mulsf3+0x1c>
 560:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_inf>
 564:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_nan>
 568:	11 24       	eor	r1, r1
 56a:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_szero>

0000056e <__mulsf3x>:
 56e:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fp_split3>
 572:	70 f3       	brcs	.-36     	; 0x550 <__mulsf3+0x8>

00000574 <__mulsf3_pse>:
 574:	95 9f       	mul	r25, r21
 576:	c1 f3       	breq	.-16     	; 0x568 <__mulsf3+0x20>
 578:	95 0f       	add	r25, r21
 57a:	50 e0       	ldi	r21, 0x00	; 0
 57c:	55 1f       	adc	r21, r21
 57e:	62 9f       	mul	r22, r18
 580:	f0 01       	movw	r30, r0
 582:	72 9f       	mul	r23, r18
 584:	bb 27       	eor	r27, r27
 586:	f0 0d       	add	r31, r0
 588:	b1 1d       	adc	r27, r1
 58a:	63 9f       	mul	r22, r19
 58c:	aa 27       	eor	r26, r26
 58e:	f0 0d       	add	r31, r0
 590:	b1 1d       	adc	r27, r1
 592:	aa 1f       	adc	r26, r26
 594:	64 9f       	mul	r22, r20
 596:	66 27       	eor	r22, r22
 598:	b0 0d       	add	r27, r0
 59a:	a1 1d       	adc	r26, r1
 59c:	66 1f       	adc	r22, r22
 59e:	82 9f       	mul	r24, r18
 5a0:	22 27       	eor	r18, r18
 5a2:	b0 0d       	add	r27, r0
 5a4:	a1 1d       	adc	r26, r1
 5a6:	62 1f       	adc	r22, r18
 5a8:	73 9f       	mul	r23, r19
 5aa:	b0 0d       	add	r27, r0
 5ac:	a1 1d       	adc	r26, r1
 5ae:	62 1f       	adc	r22, r18
 5b0:	83 9f       	mul	r24, r19
 5b2:	a0 0d       	add	r26, r0
 5b4:	61 1d       	adc	r22, r1
 5b6:	22 1f       	adc	r18, r18
 5b8:	74 9f       	mul	r23, r20
 5ba:	33 27       	eor	r19, r19
 5bc:	a0 0d       	add	r26, r0
 5be:	61 1d       	adc	r22, r1
 5c0:	23 1f       	adc	r18, r19
 5c2:	84 9f       	mul	r24, r20
 5c4:	60 0d       	add	r22, r0
 5c6:	21 1d       	adc	r18, r1
 5c8:	82 2f       	mov	r24, r18
 5ca:	76 2f       	mov	r23, r22
 5cc:	6a 2f       	mov	r22, r26
 5ce:	11 24       	eor	r1, r1
 5d0:	9f 57       	subi	r25, 0x7F	; 127
 5d2:	50 40       	sbci	r21, 0x00	; 0
 5d4:	9a f0       	brmi	.+38     	; 0x5fc <__mulsf3_pse+0x88>
 5d6:	f1 f0       	breq	.+60     	; 0x614 <__mulsf3_pse+0xa0>
 5d8:	88 23       	and	r24, r24
 5da:	4a f0       	brmi	.+18     	; 0x5ee <__mulsf3_pse+0x7a>
 5dc:	ee 0f       	add	r30, r30
 5de:	ff 1f       	adc	r31, r31
 5e0:	bb 1f       	adc	r27, r27
 5e2:	66 1f       	adc	r22, r22
 5e4:	77 1f       	adc	r23, r23
 5e6:	88 1f       	adc	r24, r24
 5e8:	91 50       	subi	r25, 0x01	; 1
 5ea:	50 40       	sbci	r21, 0x00	; 0
 5ec:	a9 f7       	brne	.-22     	; 0x5d8 <__mulsf3_pse+0x64>
 5ee:	9e 3f       	cpi	r25, 0xFE	; 254
 5f0:	51 05       	cpc	r21, r1
 5f2:	80 f0       	brcs	.+32     	; 0x614 <__mulsf3_pse+0xa0>
 5f4:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_inf>
 5f8:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_szero>
 5fc:	5f 3f       	cpi	r21, 0xFF	; 255
 5fe:	e4 f3       	brlt	.-8      	; 0x5f8 <__mulsf3_pse+0x84>
 600:	98 3e       	cpi	r25, 0xE8	; 232
 602:	d4 f3       	brlt	.-12     	; 0x5f8 <__mulsf3_pse+0x84>
 604:	86 95       	lsr	r24
 606:	77 95       	ror	r23
 608:	67 95       	ror	r22
 60a:	b7 95       	ror	r27
 60c:	f7 95       	ror	r31
 60e:	e7 95       	ror	r30
 610:	9f 5f       	subi	r25, 0xFF	; 255
 612:	c1 f7       	brne	.-16     	; 0x604 <__mulsf3_pse+0x90>
 614:	fe 2b       	or	r31, r30
 616:	88 0f       	add	r24, r24
 618:	91 1d       	adc	r25, r1
 61a:	96 95       	lsr	r25
 61c:	87 95       	ror	r24
 61e:	97 f9       	bld	r25, 7
 620:	08 95       	ret

00000622 <strcat>:
 622:	fb 01       	movw	r30, r22
 624:	dc 01       	movw	r26, r24
 626:	0d 90       	ld	r0, X+
 628:	00 20       	and	r0, r0
 62a:	e9 f7       	brne	.-6      	; 0x626 <strcat+0x4>
 62c:	11 97       	sbiw	r26, 0x01	; 1
 62e:	01 90       	ld	r0, Z+
 630:	0d 92       	st	X+, r0
 632:	00 20       	and	r0, r0
 634:	e1 f7       	brne	.-8      	; 0x62e <strcat+0xc>
 636:	08 95       	ret

00000638 <__itoa_ncheck>:
 638:	bb 27       	eor	r27, r27
 63a:	4a 30       	cpi	r20, 0x0A	; 10
 63c:	31 f4       	brne	.+12     	; 0x64a <__itoa_ncheck+0x12>
 63e:	99 23       	and	r25, r25
 640:	22 f4       	brpl	.+8      	; 0x64a <__itoa_ncheck+0x12>
 642:	bd e2       	ldi	r27, 0x2D	; 45
 644:	90 95       	com	r25
 646:	81 95       	neg	r24
 648:	9f 4f       	sbci	r25, 0xFF	; 255
 64a:	0c 94 28 03 	jmp	0x650	; 0x650 <__utoa_common>

0000064e <__utoa_ncheck>:
 64e:	bb 27       	eor	r27, r27

00000650 <__utoa_common>:
 650:	fb 01       	movw	r30, r22
 652:	55 27       	eor	r21, r21
 654:	aa 27       	eor	r26, r26
 656:	88 0f       	add	r24, r24
 658:	99 1f       	adc	r25, r25
 65a:	aa 1f       	adc	r26, r26
 65c:	a4 17       	cp	r26, r20
 65e:	10 f0       	brcs	.+4      	; 0x664 <__utoa_common+0x14>
 660:	a4 1b       	sub	r26, r20
 662:	83 95       	inc	r24
 664:	50 51       	subi	r21, 0x10	; 16
 666:	b9 f7       	brne	.-18     	; 0x656 <__utoa_common+0x6>
 668:	a0 5d       	subi	r26, 0xD0	; 208
 66a:	aa 33       	cpi	r26, 0x3A	; 58
 66c:	08 f0       	brcs	.+2      	; 0x670 <__utoa_common+0x20>
 66e:	a9 5d       	subi	r26, 0xD9	; 217
 670:	a1 93       	st	Z+, r26
 672:	00 97       	sbiw	r24, 0x00	; 0
 674:	79 f7       	brne	.-34     	; 0x654 <__utoa_common+0x4>
 676:	b1 11       	cpse	r27, r1
 678:	b1 93       	st	Z+, r27
 67a:	11 92       	st	Z+, r1
 67c:	cb 01       	movw	r24, r22
 67e:	0c 94 41 03 	jmp	0x682	; 0x682 <strrev>

00000682 <strrev>:
 682:	dc 01       	movw	r26, r24
 684:	fc 01       	movw	r30, r24
 686:	67 2f       	mov	r22, r23
 688:	71 91       	ld	r23, Z+
 68a:	77 23       	and	r23, r23
 68c:	e1 f7       	brne	.-8      	; 0x686 <strrev+0x4>
 68e:	32 97       	sbiw	r30, 0x02	; 2
 690:	04 c0       	rjmp	.+8      	; 0x69a <strrev+0x18>
 692:	7c 91       	ld	r23, X
 694:	6d 93       	st	X+, r22
 696:	70 83       	st	Z, r23
 698:	62 91       	ld	r22, -Z
 69a:	ae 17       	cp	r26, r30
 69c:	bf 07       	cpc	r27, r31
 69e:	c8 f3       	brcs	.-14     	; 0x692 <strrev+0x10>
 6a0:	08 95       	ret

000006a2 <_exit>:
 6a2:	f8 94       	cli

000006a4 <__stop_program>:
 6a4:	ff cf       	rjmp	.-2      	; 0x6a4 <__stop_program>
